" Settings
set nohud
set nosmoothscroll
set noautofocus " The opposite of autofocus; this setting stops
                " sites from focusing on an input box when they load
set typelinkhints
set cncpcompletion
let searchlimit = 30
let scrollstep = 70
let barposition = "bottom"

" let locale = "uk" " Current choices are 'jp' and 'uk'. This allows cVim to use sites like google.co.uk
                  " or google.co.jp to search rather than google.com. Support is currently limited.
                  " Let me know if you need a different locale for one of the completion/search engines
" let hintcharacters = "abc123"

" If you leave out the '%s' at the end of the URL,
" your query will be appended to the link.
" Otherwise, your query will replace the '%s'.
let searchengine sof = "https://stackoverflow.com/search?q=%"
let searchengine lrv = "https://laravel.com/api/5.7/search.html?search=%"

" This will do the same thing as above, except typing ':tabnew withbase' into to command bar
" without any search parameters will open 'http://www.dogpile.com'
" let searchengine withbase = ["http://www.dogpile.com", "http://www.dogpile.com/search/web?q=%s"]

" alias ':g' to ':tabnew google'
command g tabnew duckduckgo

let homedirectory = "/home/king"
let defaultengine = "duckduckgo"
let completionengines = ["duckduckgo", "sof"]

let searchalias g = "duckduckgo" " Create a shortcut for search engines.
                             " For example, typing ':tabnew g example'
                             " would act the same way as ':tabnew google example'

" Open all of these in a tab with `gnb` or open one of these with <N>goa where <N>
let qmark a = ["https://duckduckgo.com"]

let blacklists = ["https://mail.google.com/*", "*://mail.google.com/*", "@https://mail.google.com/mail/*"]
" blacklists prefixed by '@' act as a whitelist

let mapleader = ","

" Mappings

map <Leader>r reloadTabUncached
map <Leader>x :restore<Space>

" You can use <Space>, which is interpreted as a
" literal " " character, to enter buffer completion mode
map <Leader>b :buffer<Space>

" Toggle the current HUD display value
map <C-h> :set hud!<CR>

" Switch between alphabetical hint characters and numeric hints
map <C-i> :set numerichints!<CR>

map <C-u> rootFrame
map <M-h> previousTab
map <C-d> scrollPageDown
map <C-u> scrollPageUp

" Create a variable that can be used/referenced in the command bar
let @@reddit_prog = 'http://www.reddit.com/r/programming'
let @@top_all = 'top?sort=top&t=all'
let @@top_day = 'top?sort=top&t=day'

" TA binding opens 'http://www.reddit.com/r/programming/top?sort=top&t=all' in a new tab
map TA :tabnew @@reddit_prog/@@top_all<CR>
map TD :tabnew @@reddit_prog/@@top_day<CR>

" Use paste buffer in mappings
map <Leader>t :tabnew sof @"<CR>

" Code blocks (see below for more info)
getIP() -> {{
httpRequest({url: 'http://api.ipify.org/?format=json', json: true},
            function(res) { Status.setMessage('IP: ' + res.ip); });
}}
" Displays your public IP address in the status bar
map <Leader>i :call getIP<CR>

" Script hints
echo(link) -> {{
  console.log(link.href);
}}
map <Leader>f createScriptHint(echo)

" let configpath = '~/Projects/dotfiles/cvim/.cvimrc'
" set localconfig " Update settings via a local file (and the `:source` command) rather
                " than the default options page in chrome
" As long as localconfig is set in the .cvimrc file. cVim will continue to read

unmap x
unmap xh
unmap xl
unmap x0
unmap x$
map xx  :call closeTab<CR>
map xh	:call closeTabLeft<CR>
map xl	:call closeTabRight<CR>
map x0	:call closeTabsToLeft<CR>
map x^	:call closeTabsToLeft<CR>
map x$	:call closeTabsToRight<CR>
